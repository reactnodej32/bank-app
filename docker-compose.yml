version: "3.7"

services:
  # Nginx container
  reverseproxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"

    depends_on:
      - client
    restart: always

    # React container
  client:
    stdin_open: true
    container_name: client
    build:
      context: "./client"
      dockerfile: Dockerfile
    volumes:
      - "./client:/usr/src/app"
      - "/usr/src/app/node_modules"
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"

  # .NET CONTAINER
  api:
    container_name: api
    ports:
      - 5000:5000
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    environment:
      DATABASE_HOST: database
      MYSQL_ROOT_PASSWORD: dbuserpassword
      MYSQL_USER: dbuser
      # for development http://
      # for production  http://+:5000
      ASPNETCORE_URLS: "http://+;http://+:5000"
    restart: always
    #start database first before starting api
    depends_on:
      - database

  # MySQL Database Container
  database:
    container_name: database
    image: mysql:5.7
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      MYSQL_DATABASE: users_prod
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbuserpassword
    volumes:
      - dbdata:/var/lib/mysql
      # - ./api/_MySQL_Init_Script:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    restart: always
# For development database data to be stored in a docker volume
# called dbdata
volumes:
  dbdata:
